
@{
    ViewBag.Title = "Index";
}

<div class="card fixed-card">
    <div class="card-header">

    </div>

    <div class="card-body">
        <div class="row d-flex justify-content-center align-items-center mb-2">
            <div class="col-md-6 col-12 d-flex justify-content-center">
                <span class="badge bg-main"><h5 id="sueldoTotal"></h5></span>
            </div>
            <div class="col-md-6 col-12 d-flex justify-content-center mt-2">
                <span class="badge bg-main"><h5 id="dineroDisponible"></h5></span>
            </div>
        </div>




        <div class="row">
            <div class="row col-md-4 col-sm-12 align-items-center  d-flex justify-content-center">
                <div class="col-sm-12 col-md-6">
                    <h2 class="text-center">Dashboard</h2>
                </div>
                <div class="pie-chart col-md-8 col-sm-8">
                    <canvas id="pieChart"></canvas>
                    <div id="emptyChartMessage" class="empty-chart-message text-center">No hay gastos disponibles</div>
                </div>
                <div class="col-6 d-flex justify-content-center m-3">
                    <span class="badge bg-main"><h5 id="totalGastos"></h5></span>
                </div>
                <div class="d-flex justify-content-center">
                    <button class="btn bg-main text-light" id="verDetalleGasto">Ver gastos</button>
                </div>
            </div>

            <div class="separador-negro d-md-none d-xl-none mt-2 mb-2"></div>

            <div class="row col-md-4 col-sm-12 col-12 p-3 d-flex justify-content-center">
                <div class="mb-3 d-flex justify-content-center">
                    <button class="btn bg-main rounded-pill text-light" id="agregarNuevoTipoGasto">Nuevo tipo de gasto</button>
                </div>
                <div class="col-sm-12 d-flex justify-content-center">
                    <h2 class="text-center text-main">Agregar Gasto</h2>
                </div>
                <form id="formularioGasto" action="@Url.Action("AgregarGasto", "Gasto")" method="post">
                    <input type="hidden" id="idSalario" name="idSalario" value="@Model.IdSalario">

                    <div class="form-group row col-sm-12 d-flex justify-content-center align-items-center">
                        <div class="col-sm-12 col-md-2 d-flex justify-content-center">
                            <label for="amount" class="text-center text-main">Monto:</label>
                        </div>
                        <div class="col-sm-12 col-md-8 d-flex justify-content-center">
                            <input type="number" id="TotalGasto" name="Total" step="0.01" class="form-control" required>
                        </div>
                    </div>
                    <div class="form-group row col-sm-12 d-flex justify-content-center align-items-center">
                        <div class="col-sm-12 col-md-2 d-flex justify-content-center">
                            <label for="description" class="text-main">Nombre:</label>
                        </div>
                        <div class="col-sm-12 col-md-8 d-flex justify-content-center">
                            <input type="text" id="Descripcion" name="Descripcion" class="form-control" required>
                        </div>
                    </div>
                    <div class="form-group row col-sm-12 d-flex justify-content-center align-items-center">
                        <div class="col-sm-12 d-flex justify-content-center">
                            <label for="ExpenseTypeID" class="text-main">Tipo de gasto:</label>
                        </div>
                        <div class="d-flex justify-content-center align-items-center">
                            <select class="form-control text-center" id="tipoGasto" name="IdTipoGasto">
                                <option value="">Seleccionar Tipo Gasto</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group row col-sm-12 d-flex justify-content-center align-items-center">
                        <div class="col-sm-12 d-flex justify-content-center">
                            <label for="ExpenseTypeID" class="text-main">Plataforma:</label>
                        </div>
                        <div class="d-flex justify-content-center align-items-center">
                            <select class="form-control text-center" id="salarioBilletera" name="IdSalarioBilletera">
                                <option value="" class="d-flex justify-content-center">Seleccionar Plataforma</option>
                            </select>
                        </div>
                    </div>
                    <div class="d-flex justify-content-center">
                        <button type="submit" class="btn bg-main rounded-pill text-light">Agregar Gasto</button>
                    </div>
                </form>
            </div>

            <div class="separador-negro d-md-none d-xl-none mt-2 mb-2"></div>


            <div class="row col-md-4 col-sm-12 col-12 d-flex justify-content-center align-items-center">
                <div class="container">
                    <div class="mb-3 d-flex justify-content-center">
                        <button class="btn bg-main rounded-pill text-light" id="agregarSalarioBilletera">Agregar tipo de dinero</button>
                    </div>
                    <h2 class="text-center text-main">Mi dinero</h2>
                    <table class="table table-responsive">
                        <thead>
                            <tr>
                                <th class="text-nowrap">Plataforma</th>
                                <th class="text-nowrap">Monto</th>
                                <th class="text-nowrap">Acciones</th>

                            </tr>
                        </thead>
                        <tbody id="tablaTipoBilletera">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal" id="detallesGastoModal" tabindex="-1">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            <div class="modal-status bg-success"></div>
            <div class="modal-body text-center py-4" id="modalBodyVerGastos">
            </div>
        </div>
    </div>
</div>

<script>
    const idSalario = @Model.IdSalario;
    const ctx = document.getElementById('pieChart').getContext('2d');
    const sueldoTotal = document.querySelector("#sueldoTotal");
    const dineroDisponible = document.querySelector("#dineroDisponible");
    const totalGastos = document.querySelector("#totalGastos");
    const agregarNuevoTipoGasto = document.querySelector("#agregarNuevoTipoGasto");
    const agregarSalarioBilletera = document.querySelector("#agregarSalarioBilletera");
    const verDetalleGasto = document.querySelector("#verDetalleGasto");

    $(document).ready(function () {
        console.log(sueldoTotal);
        obtenerSueldoTotal();
        llenarSelected();
        tablaTipoBilletera();
        llenarPie();
        obtenerTotalGasto();
    });

    function obtenerSueldoTotal() {
        enEspera();
        $.ajax({
            url: '@Url.Action("GetSueldoTotal", "Salario")',
            data: { idSalario: idSalario },
            type: 'GET',
            success: function (data) {
                enEspera("chau");
                $("#sueldoTotal").html('SUELDO NETO $' + data);
                obtenerDineroDisponible();
            },

            error: function (error) {
                console.error('Error al obtener el contenido del div:', error);
            }
        });
    }

    function obtenerDineroDisponible() {

        $.ajax({
            url: '@Url.Action("GetDineroDisponible", "Dinero")',
            data: { idSalario: idSalario },
            type: 'GET',
            success: function (data) {
                $("#dineroDisponible").html('DINERO DISPONIBLE $' + data);
            },


            error: function (error) {
                console.error('Error al obtener el contenido del div:', error);
            }
        });
    }

    function obtenerTotalGasto() {
    $.ajax({
        url: '@Url.Action("GetTotalGastos", "Gasto")',
        data: { idSalario: idSalario },
        type: 'GET',
        success: function (data) {
            $("#totalGastos").html('Gasto Total $' + data);
        },

        error: function (error) {
            console.error('Error al obtener el contenido del div:', error);
            $('#totalGastos').html('Error al obtener el contenido del div.');
        }
    });
}

    //-----------------RELLENAR SELECTED-----------------

    function llenarSelected() {
        enEspera();

        $.ajax({
            url: '@Url.Action("GetAllTipoGasto", "Gasto")',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                enEspera("chau");
                const dropdownList = $('#tipoGasto');
                console.log(data);
                $.each(data, function (index, tipo) {
                    dropdownList.append($('<option></option>').val(tipo.IdTipoGasto).text(tipo.NombreGasto));
                });
            },

            error: function (jqXHR, textStatus, errorThrown) {
                enEspera("chau");
                console.log("Error en la llamada AJAX: " + textStatus + ", " + errorThrown);
            }
        });

        $.ajax({
            url: '@Url.Action("ObtenerPlataformas", "Dinero")',
            type: 'GET',
            dataType: 'json',
            data: {idSalario: idSalario},
            success: function (data) {
                const dropdownList = $('#salarioBilletera');
                console.log(data);
                enEspera("chau");
                $.each(data, function (index, tipo) {
                    dropdownList.append($('<option></option>').val(tipo.IdBilletera).text(tipo.NombreBilletera));
                });
            },

            error: function (jqXHR, textStatus, errorThrown) {
                enEspera("chau");
                console.log("Error en la llamada AJAX: " + textStatus + ", " + errorThrown);
            }
        });
    }

    function tablaTipoBilletera() {
        $.ajax({
            url: '@Url.Action("GetTipoBilleteraBySalario", "Dinero")',
            type: 'GET',
            data: { idSalario: idSalario },
            success: function (data) {
                $("#tablaTipoBilletera").empty();

                $.each(data, function (index, item) {
                    $("#tablaTipoBilletera").append("<tr><td>" + item.NombreBilletera + "</td><td>" + item.Total + "</td>" +
                        "</td><td>" +
                        '<button class="btn bg-light"> <i class="fa-solid fa-arrow-right-arrow-left clickable" style="color: #1f5125;" onclick="transferir  (' + item.IdBilletera + ')"></i> </button>'+
                        '<button class="btn bg-light"> <i class="bi bi-dash-circle-fill clickable" style="color: #FF0000;" onclick="vaciarCuenta(' + item.IdBilletera + ')"></i> </button>'
                        + "</td></tr>");
                });
            },
            error: function () {
                alert("Hubo un error al obtener los datos de la tabla.");
            }
        });
    }

    function llenarPie() {
        $.ajax({
            url: '@Url.Action("ObtenerDatosGrafico", "Gasto")',
            type: 'GET',
            dataType: 'json',
            data: { idSalario: idSalario },
            success: function (data) {
                console.log(data.datasets.data);
                console.log(data.datasets.length);

                if (data.datasets.length > 0) {
                    $("#emptyChartMessage").hide();
                    const pieChart = new Chart(ctx, {
                        type: 'pie',
                        data: data
                    });
                } else {
                    $("#emptyChartMessage").show();
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log("Error al obtener los datos para el gráfico: " + textStatus + ", " + errorThrown);
            }
        });
    }
    //-----------------FIN SELECTED-----------------

    //-----------------MODALS-----------------

    agregarNuevoTipoGasto.addEventListener("click", async function () {
        const { value: nombreTipoGasto } = await Swal.fire({
            title: "Agregar nuevo tipo de gasto",
            input: "text",
            inputLabel: "Nuevo tipo gasto",
            inputPlaceholder: "Ingresar por ejemplo (Tarjeta)!"
        });
        if (nombreTipoGasto) {
            enEspera();
            $.ajax({
                url: '@Url.Action("NuevoTipoGasto", "Gasto")',
                type: 'GET',
                data: { nombreTipoGasto: nombreTipoGasto },
                success: function (data) {
                    enEspera("chau");
                    if (data == true) {
                        Swal.fire({
                            title: "Gasto agregado! " + nombreTipoGasto,
                            icon: "success",
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            title: "Gasto existente!",
                            icon: "error",
                        }).then(() => {
                            location.reload();
                        });
                    }
                },
                error: function () {
                    enEspera("chau");
                    Swal.fire({
                        title: "Error en el servidor!",
                        icon: "error",
                    }).then(() => {
                        location.reload();
                    });
                }
            });
        }
    })

    agregarSalarioBilletera.addEventListener("click", async function () {
        const { value: formValues } = await Swal.fire({
            title: 'Agregar nueva billetera',
            html:
                '<input id="input1" type="text" class="swal2-input" placeholder="Nombre plataforma">' +
                '<input id="input2" type="number" class="swal2-input" placeholder="Monto disponible">',
            focusConfirm: false,
            preConfirm: () => {
                return [
                    document.getElementById('input1').value,
                    document.getElementById('input2').value
                ]
            }
        });

        if (formValues) {
            enEspera();
            const [valor1, valor2] = formValues;
            const nombrePlataforma = valor1;
            const dineroPlataforma = valor2;

            if (nombrePlataforma != null && dineroPlataforma != null) {
                $.ajax({
                    url: '@Url.Action("NuevoSalarioBilletera", "Dinero")',
                    data: {
                        nombrePlataforma: nombrePlataforma,
                        dineroPlataforma: dineroPlataforma,
                        idSalario: idSalario
                    },
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        enEspera("chau");
                        if (data == true) {
                            Swal.fire({
                                title: "Nueva plataforma agregada! " + nombrePlataforma,
                                icon: "success",
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: "No se pudo agregar la plataforma! " + nombrePlataforma,
                                icon: "error",
                            }).then(() => {
                                location.reload();
                            });
                        }
                    },

                    error: function (jqXHR, textStatus, errorThrown) {
                        enEspera("chau");
                        console.log("Error en la llamada AJAX: " + textStatus + ", " + errorThrown);
                    }
                });
            }
            console.log('Valor 1:', valor1);
            console.log('Valor 2:', valor2);
        }
    })

    async function transferir(idSalarioBilletera) {
        console.log(idSalarioBilletera);


        $.ajax({
            url: '@Url.Action("ObtenerPlataformas", "Dinero")', // Reemplaza la URL con la correcta
            type: 'GET',
            dataType: 'json',
            data: { idSalario: idSalario },
            success: function (plataformas) {
                const filteredPlataformas = plataformas.filter(plataforma => plataforma.IdBilletera !== idSalarioBilletera);
                const options = filteredPlataformas.map(plataforma => `<option value="${plataforma.IdBilletera}">${plataforma.NombreBilletera}</option>`).join('');
                $('#plataformas').html(options);
            },

            error: function (jqXHR, textStatus, errorThrown) {
                console.log("Error en la llamada AJAX: " + textStatus + ", " + errorThrown);
            }
        });


        const { value: formValues } = await Swal.fire({
            title: 'Agregar nueva billetera',
            html:
                '<input id="input1" type="number" class="swal2-input" placeholder="Monto disponible">' +
                '<div class="d-flex justify-content-center align-items-center"> <select class="form-control text-center" id="plataformas"><option value="" class="d-flex justify-content-center">Seleccionar Plataforma</option></select ></div > ',
            focusConfirm: false,
            preConfirm: () => {
                return [
                    document.getElementById('input1').value,
                    document.getElementById('plataformas').value
                ]
            }
        });

        if (formValues) {
            enEspera();
            const [valor1, valor2] = formValues;
            const dineroPlataforma = valor1;
            const idPlataforma = valor2;
            if (idPlataforma != null && dineroPlataforma != null) {
                $.ajax({
                    url: '@Url.Action("Transferir", "Dinero")',
                    data: {
                        idSalario: idSalario,
                        idPlataformaEntrante: idPlataforma,
                        idPlataformaSaliente: idSalarioBilletera,
                        dineroPlataforma: dineroPlataforma
                    },
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        enEspera("chau");
                        if (data == true) {
                            Swal.fire({
                                title: "Transferencia exitosa!",
                                icon: "success",
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: "No se pudo realizar la transferencia!",
                                icon: "error",
                            }).then(() => {
                                location.reload();
                            });
                        }
                    },

                    error: function (jqXHR, textStatus, errorThrown) {
                        enEspera("chau");
                        console.log("Error en la llamada AJAX: " + textStatus + ", " + errorThrown);
                    }
                });
            }
        }
    }

    function vaciarCuenta(idSalarioBilletera) {
    // Preguntar al usuario antes de proceder
    Swal.fire({
        title: '¿Estás seguro de que quieres vaciar la cuenta?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Sí, vaciar cuenta',
        cancelButtonText: 'Cancelar'
    }).then((result) => {
        if (result.isConfirmed) {
            // Si el usuario confirma, realizar la llamada AJAX
            $.ajax({
                url: '@Url.Action("Vaciar", "Dinero")',
                data: {
                    idSalario: idSalario,
                    idSalarioBilletera: idSalarioBilletera
                },
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    enEspera("chau");
                    if (data == true) {
                        Swal.fire({
                            title: "Se vació la cuenta exitosamente!",
                            icon: "success",
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            title: "No se pudo realizar la acción!",
                            icon: "error",
                        }).then(() => {
                            location.reload();
                        });
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    enEspera("chau");
                    console.log("Error en la llamada AJAX: " + textStatus + ", " + errorThrown);
                }
            });
        }
    });
}

    verDetalleGasto.addEventListener("click", function () {
        enEspera();
        const myModal = new bootstrap.Modal(document.getElementById('detallesGastoModal'));
        myModal.show();

        $.ajax({
            url: "@Url.Action("MisGastos", "Gasto")",
            data: { idSalario: idSalario }, // Suponiendo que 3 es el valor deseado para idSalario
            type: "GET",
            success: function (result) {
                enEspera("chau");
                $("#modalBodyVerGastos").html(result);
            },

            error: function () {
                alert("Error al cargar la vista parcial");
            }
        });
    });
    //-----------------FIN MODALS-----------------

    //-----------------FORMULARIOS PARA GRABAR-----------------

    $('#formularioGasto').submit(function (event) {

        event.preventDefault();

        enEspera();

        const formData = new FormData($(this)[0]);


        $.ajax({
            url: '@Url.Action("AgregarGasto", "Gasto")',
            type: 'POST',
            dataType: 'json',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                enEspera("chau");
                console.log(response);
                if (response == true) {
                    Swal.fire({
                        title: "El Gasto fue agregado correctamente",
                        icon: "success",
                    }).then(() => {
                        location.reload();
                    });

                } else {
                    Swal.fire({
                        title: "El gasto excede tu dinero en cuenta",
                        icon: "error",
                    }).then(() => {
                        location.reload();
                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                enEspera("chau");
                Swal.fire({
                    title: "Hubo un error en el servidor",
                    icon: "error" + textStatus,
                }).then(() => {
                    location.reload();
                });
            }
        });
    });

    //-----------------FIN FORMULARIOS-----------------
</script>

